name: Agents Validation, PR, and Auto-merge

on:
  push:
    branches-ignore:
      - main
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled, edited, ready_for_review]
  pull_request_review:
    types: [submitted, dismissed]
  check_suite:
    types: [completed]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate_on_branch:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      statuses: write
    outputs:
      pr_number: ${{ steps.create_pr.outputs.pull-request-number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: python -m pip install --upgrade pip pyyaml

      - name: Run validator
        id: validate
        run: python .github/validators/validate_index.py

      - name: Create or update PR
        id: create_pr
        if: success() && steps.validate.outcome == 'success'
        uses: ./.github/actions/create-pull-request
        with:
          token: ${{ github.token }}
          path: '.'
          branch: auto-pr-${{ github.sha }}
          base: main
          title: "Auto PR: ${{ github.ref_name }}"
          body: Auto-created PR for branch ${{ github.ref_name }}. Validated by workflow.
          labels: "auto-validated,automerge"
          delete-branch: true
          commit-message: Auto commit for PR from ${{ github.ref_name }}

      - name: Attempt automerge
        if: success() && steps.validate.outcome == 'success' && steps.create_pr.outputs.pull-request-number != ''
        uses: ./.github/actions/automerge
        with:
          token: ${{ github.token }}
          pull-request: ${{ steps.create_pr.outputs.pull-request-number }}
          merge-method: squash

  validate_pr:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      (github.event.action == 'opened' ||
       github.event.action == 'reopened' ||
       github.event.action == 'synchronize')
    permissions:
      contents: read
      pull-requests: write
      statuses: write
    steps:
      - name: Checkout PR merge commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/pull/${{ github.event.pull_request.number }}/merge

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: python -m pip install --upgrade pip pyyaml

      - name: Run validator
        id: validate
        run: python .github/validators/validate_index.py

  auto_merge:
    needs: validate_pr
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      contains(github.event.pull_request.labels.*.name, 'automerge') &&
      contains(github.event.pull_request.labels.*.name, 'auto-validated') &&
      github.event.pull_request.draft == false &&
      github.event.pull_request.merged == false
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Attempt automerge
        uses: ./.github/actions/automerge
        with:
          token: ${{ github.token }}
          pull-request: ${{ github.event.pull_request.number }}
          merge-method: squash
          required-labels: "automerge,auto-validated"

  automerge_after_checks:
    runs-on: ubuntu-latest
    if: github.event_name == 'check_suite' || github.event_name == 'status' || github.event_name == 'pull_request_review'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Attempt automerge (post-checks)
        uses: ./.github/actions/automerge
        with:
          token: ${{ github.token }}
          merge-method: squash
          required-labels: "automerge,auto-validated"
