name: Auto Validate and Merge PR

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, ready_for_review]

jobs:
  validate:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false && !github.event.pull_request.merged
    permissions:
      contents: read
      pull-requests: read
    outputs:
      validation-passed: ${{ steps.validation.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install pyyaml

      - name: Validate repository
        id: validation
        continue-on-error: true
        run: |
          echo "üîç Starting repository validation..."

          if python .github/scripts/validate_index.py; then
            echo "‚úÖ Validation passed - all files accounted for"
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Validation failed - missing files or configuration errors"
            echo "result=false" >> $GITHUB_OUTPUT
            exit 1
          fi

  auto-merge:
    needs: validate
    if: >
      needs.validate.result == 'success' &&
      contains(github.event.pull_request.labels.*.name, 'automerge') &&
      github.event.pull_request.draft == false &&
      !github.event.pull_request.merged
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check PR status
        id: check-pr
        run: |
          echo "Checking PR #${{ github.event.pull_request.number }} ready for merge..."
          echo "PR State: ${{ github.event.pull_request.state }}"
          echo "PR Merged: ${{ github.event.pull_request.merged }}"
          echo "PR Draft: ${{ github.event.pull_request.draft }}"
          echo "Has automerge label: ${{ contains(github.event.pull_request.labels.*.name, 'automerge') }}"
          echo "Validation passed: ${{ needs.validate.outputs.validation-passed }}"

      - name: Auto merge pull request
        if: needs.validate.outputs.validation-passed == 'true'
        run: |
          echo "üöÄ Merging PR #${{ github.event.pull_request.number }}..."
          gh pr merge ${{ github.event.pull_request.number }} --squash --delete-branch=false
          echo "‚úÖ Successfully merged PR"

      - name: Notify if validation failed
        if: needs.validate.outputs.validation-passed != 'true'
        run: |
          echo "‚è∏Ô∏è  Validation failed - auto-merge blocked for PR #${{ github.event.pull_request.number }}"
          echo "Please review validation errors and fix any issues"

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    needs: auto-merge
    if: success() && needs.auto-merge.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cleanup merged branch
        run: |
          if [ "${{ github.event.pull_request.head.ref }}" != "main" ]; then
            echo "üßπ Cleaning up merged branch: ${{ github.event.pull_request.head.ref }}"
            git push origin --delete "${{ github.event.pull_request.head.ref }}" || echo "Branch already deleted or deletion not permitted"
          fi
