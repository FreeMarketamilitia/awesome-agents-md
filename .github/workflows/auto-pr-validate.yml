name: Auto PR, Validate, and Merge

on:
  create:
    branches: '*'
  pull_request:
    types: [opened, synchronize, reopened, labeled]

jobs:
  auto-pr:
    if: github.event_name == 'create'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      pr-number: ${{ steps.cpr.outputs.pull-request-number }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          branch: ${{ github.ref_name }}
          title: "Auto PR for branch ${{ github.ref_name }}"
          body: "This PR was auto-created from branch `${{ github.ref_name }}`"
          base: main

      - name: Add automerge label
        if: steps.cpr.outputs.pull-request-number != ''
        run: |
          gh pr edit ${{ steps.cpr.outputs.pull-request-number }} --add-label "automerge"
          echo "PR created with automerge label"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate:
    runs-on: ubuntu-latest
    if: always()  # Run even if previous job failed
    outputs:
      validation-passed: ${{ steps.validation.outputs.result }}
    steps:
      - name: Wait for PR creation
        run: |
          echo "Validating repository..."
          sleep 2  # Give time for any preparation

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install pyyaml

      - name: Validate repo against index.yaml
        id: validation
        run: |
          python .github/scripts/validate_index.py && echo "result=true" >> $GITHUB_OUTPUT

  auto-merge:
    needs: [auto-pr, validate]
    if: always() && needs.validate.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      merge-success: ${{ steps.merge.outputs.result }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Debug PR info
        run: |
          echo "PR Number: ${{ needs.auto-pr.outputs.pr-number }}"
          echo "PR URL: https://github.com/${{ github.repository }}/pull/${{ needs.auto-pr.outputs.pr-number }}"

      - name: Merge PR
        id: merge
        run: |
          if [ "${{ needs.auto-pr.outputs.pr-number }}" != "" ]; then
            gh pr merge ${{ needs.auto-pr.outputs.pr-number }} --squash --auto
            echo "Successfully merged PR ${{ needs.auto-pr.outputs.pr-number }}"
            echo "result=success" >> $GITHUB_OUTPUT
          else
            echo "No PR number found to merge"
            echo "result=failed" >> $GITHUB_OUTPUT
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    needs: [auto-pr, auto-merge]
    if: always() && needs.auto-merge.result == 'merge-success'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Delete merged branch
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          PR_NUMBER="${{ needs.auto-pr.outputs.pr-number }}"

          if [ "$BRANCH_NAME" != "main" ] && [ "$PR_NUMBER" != "" ]; then
            echo "Deleting merged branch: $BRANCH_NAME"
            git push origin --delete "$BRANCH_NAME"
            echo "Branch $BRANCH_NAME deleted successfully"
          else
            echo "Not deleting branch - this is main branch or no PR number"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
