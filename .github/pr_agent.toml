[custom_review.instructions]
# Custom instructions for documentation reviews
pr_custom_review_instructions = """
# Documentation Review Guidelines for Awesome Agents MD
- Ensure content follows repository standards (see CONTRIBUTING.md)
- Check for clear, concise writing with proper grammar
- Verify markdown formatting (tables, code blocks, headings)
- Validate YAML files (.yaml) for proper syntax and structure
- Confirm consistent naming (lowercase with hyphens, no underscores)
- Check folder structure adheres to README.md hierarchy
- Look for broken internal/external links
- Ensure content is relevant to software development guides
- Review for accessibility (clear headings, alt text if images)
- Validate that new agents are properly added to index.yaml
"""

[pr_reviewer]
pr_reviewer.enabled = true
customization_keywords = ["documentation", "guide", "domain", "framework", "workflow", "readme", "yaml", "markdown"]

[pr_questions]
# Disable code-specific questions
pr_questions.enabled = false

[pr_reviewer.pr_reviewer]
extra_instructions = """
Focus documentation-specific review on:
- Content clarity and technical accuracy
- Markdown table and list formatting
- YAML syntax validation
- Cross-references between guides
- Consistency with existing documentation style
- Relevance to repository categories (domains, frameworks, etc.)
- Compliance with contribution guidelines
"""

[pr_templates.docs]
template = """
Review for MD Files:
- Ensure file is placed in correct folder according to README.md hierarchy (domains/, frameworks/, workflows/, etc.)
- Use lowercase filenames with hyphens only (no underscores or spaces)
- Check title formatting and relevance to the folder category
- Verify proper markdown syntax (headings, links, images, code blocks)
- Confirm grammar, spelling, and writing clarity
- Ensure technical accuracy matching repository standards
- Verify consistency with established guide formats and styles
- Check internal links to other repository files and external resources
- Validate content relevance to software development best practices
- Confirm adherence to contribution guidelines (see CONTRIBUTING.md)
- Review structure matches agent/guide documentation format
- Include Table of Contents or section headings as appropriate
- Add alt text for any images included
- Verify metadata or frontmatter if required by guide type
- Ensure guide fits within repository's domain focus
"""

[pr_templates.yaml]
template = """
Validate YAML Files:
- Verify valid YAML syntax and consistent formatting (2-space indentation)
- For index.yaml: Check agents array structure with required fields
- Validate agent 'name' field is descriptive and follows naming conventions
- Confirm 'source' field points to existing .md file in correct relative path
- Verify 'target' field specifies valid download filename/path for agentfetch
- Ensure no duplicate agent names or conflicting target paths
- Check for proper YAML structure and no syntax errors that break parsing
- Validate file paths in 'source' match repository folder structure
- Ensure no sensitive information is included in the configuration
- Confirm YAML formatting is consistent with other repository settings files
- Verify target paths are appropriate for the intended download location
- Check for completeness of agent entries (all required fields present)
- Validate schema compliance with repository's YAML configuration standards
- Ensure changes to index.yaml properly register new documentation agents
"""

# Auto-review settings
auto_review = true

# Auto-approval settings - optimized for documentation automation
enable_auto_approval = true
auto_approval_min_score = 95  # Highest threshold for premium quality assurance
auto_approval_min_reviewers = 0  # No minimum reviewers required
auto_approval_min_words = 10  # Minimum PR description length

# Auto-approval conditions - streamlined for documentation
[pr_auto_approval]
# Auto-approve PRs that modify documentation and config files
file_patterns = ["*.yaml", "*.yml", "*.md", "*.toml"]
exclude_file_patterns = [".*"]  # Exclude hidden files

# Branch restrictions - allow feature branches and main
allowed_branches = ["main", "develop", "feature/*", "test-auto-approval", "test-nextjs15-image-optimization"]

# Size restrictions - optimized for documentation PRs
max_pr_size = 200  # Allow larger documentation PRs
max_added_lines = 10000  # Allow large documentation additions

# Security checks - customized for documentation repo
require_branch_protection = false
skip_a11y_checks = false  # Run accessibility checks for documentation

# Auto-merge settings - ENABLED for qualifying PRs
auto_merge = true  # Enable auto-merge after approval

# Additional automation settings
[pr_auto_approval.conditions]
# Strict conditions for auto-merging
require_all_tests_pass = true
require_no_conflicts = true
require_base_branch = "main"
require_pr_label = false
check_users_inactive = false

# Post-merge cleanup
delete_branch_after_merge = true  # Automatically delete branch after merge
